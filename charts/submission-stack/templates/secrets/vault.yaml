{{- if not .Values.global.dev }}
apiVersion: redhatcop.redhat.io/v1alpha1
kind: VaultSecret
metadata:
  name: keycloak-admin-secret
  labels:
    {{- include "submission-stack.labels" . | nindent 4 }}
spec:
  refreshPeriod: 24h0m0s
  vaultSecretDefinitions:
    - authentication:
        path: kubernetes
        role: {{ .Values.vault.role }}
        serviceAccount:
          name: default
      name: secret
      path: {{ .Values.vault.secretPath }}
  output:
    name: keycloak-admin-secret
    stringData: 
      password: {{`'{{ .secret.keycloak_admin_pw }}'`}}
    type: Opaque

---

apiVersion: redhatcop.redhat.io/v1alpha1
kind: VaultSecret
metadata:
  name: {{ include "submission-stack.fullname" . }}-kc-pg-secret
  labels:
    {{- include "submission-stack.labels" . | nindent 4 }}
spec:
  refreshPeriod: 24h0m0s
  vaultSecretDefinitions:
    - authentication:
        path: kubernetes
        role: {{ .Values.vault.role }}
        serviceAccount:
          name: default
      name: secret
      path: {{ .Values.vault.secretPath }}
  output:
    name: {{ include "submission-stack.fullname" . }}-kc-pg-secret
    stringData: 
      username: "keycloak"
      password: {{`'{{ .secret.keycloak_postgres_pw }}'`}}
    type: Opaque

---

apiVersion: redhatcop.redhat.io/v1alpha1
kind: VaultSecret
metadata:
  name: {{ include "submission-stack.fullname" . }}-postgres-secret
  labels:
    {{- include "submission-stack.labels" . | nindent 4 }}
spec:
  refreshPeriod: 24h0m0s
  vaultSecretDefinitions:
    - authentication:
        path: kubernetes
        role: {{ .Values.vault.role }}
        serviceAccount:
          name: default
      name: secret
      path: {{ .Values.vault.secretPath }}
  output:
    name: {{ include "submission-stack.fullname" . }}-postgres-secret
    stringData: 
      username: "postgres"
      password: {{`'{{ .secret.submission_postgres_pw }}'`}}
    type: Opaque

---

apiVersion: redhatcop.redhat.io/v1alpha1
kind: VaultSecret
metadata:
  name: minio-env-config
  labels:
    {{- include "submission-stack.labels" . | nindent 4 }}
spec:
  refreshPeriod: 24h0m0s
  vaultSecretDefinitions:
    - authentication:
        path: kubernetes
        role: {{ .Values.vault.role }}
        serviceAccount:
          name: default
      name: secret
      path: {{ .Values.vault.secretPath }}
  output:
    name: minio-env-config
    stringData: 
      accessKey: {{`'{{ .secret.minio_access_key }}'`}}
      secretKey: {{`'{{ .secret.minio_secret_key }}'`}}
      config.env: |
        export MINIO_ROOT_USER="{{`{{ .secret.minio_access_key }}`}}" 
        export MINIO_ROOT_PASSWORD="{{`{{ .secret.minio_secret_key }}`}}"
        export MINIO_IDENTITY_OPENID_CLIENT_ID_PRIMARY_IAM="{{`{{ .secret.minio_keycloak_client_id }}`}}"
        export MINIO_IDENTITY_OPENID_CLIENT_SECRET_PRIMARY_IAM="{{`{{ .secret.minio_keycloak_client_secret }}`}}"
    type: Opaque

---

apiVersion: redhatcop.redhat.io/v1alpha1
kind: VaultSecret
metadata:
  name: rabbitmq-secret
  labels:
    {{- include "submission-stack.labels" . | nindent 4 }}
spec:
  refreshPeriod: 24h0m0s
  vaultSecretDefinitions:
    - authentication:
        path: kubernetes
        role: {{ .Values.vault.role }}
        serviceAccount:
          name: default
      name: secret
      path: {{ .Values.vault.secretPath }}
  output:
    name: rabbitmq-secret
    stringData: 
      username: {{`'{{ .secret.rmq_username }}'`}}
      password: {{`'{{ .secret.rmq_password }}'`}}
      type: rabbitmq
      provider: rabbitmq
      port: "5672"
      host: rabbitmq
      default_user.conf: |
        default_user = {{`'{{ .secret.rmq_username }}'`}}
        default_pass = {{`'{{ .secret.rmq_password }}'`}}
    type: Opaque

---


apiVersion: redhatcop.redhat.io/v1alpha1
kind: VaultSecret
metadata:
  name: api-keycloak-secret
  labels:
    {{- include "submission-stack.labels" . | nindent 4 }}
spec:
  refreshPeriod: 24h0m0s
  vaultSecretDefinitions:
    - authentication:
        path: kubernetes
        role: {{ .Values.vault.role }}
        serviceAccount:
          name: default
      name: secret
      path: {{ .Values.vault.secretPath }}
  output:
    name: api-keycloak-secret
    stringData: 
      secret: {{`'{{ .secret.api_keycloak_client_secret }}'`}}
      id: {{`'{{ .secret.api_keycloak_client_id }}'`}}
    type: Opaque

---

apiVersion: redhatcop.redhat.io/v1alpha1
kind: VaultSecret
metadata:
  name: ui-keycloak-secret
  labels:
    {{- include "submission-stack.labels" . | nindent 4 }}
spec:
  refreshPeriod: 24h0m0s
  vaultSecretDefinitions:
    - authentication:
        path: kubernetes
        role: {{ .Values.vault.role }}
        serviceAccount:
          name: default
      name: secret
      path: {{ .Values.vault.secretPath }}
  output:
    name: ui-keycloak-secret
    stringData: 
      secret: {{`'{{ .secret.ui_keycloak_client_secret }}'`}}
      id: {{`'{{ .secret.ui_keycloak_client_id }}'`}}
    type: Opaque

---

apiVersion: redhatcop.redhat.io/v1alpha1
kind: VaultSecret
metadata:
  name: seq-admin-password-hash-secret
  labels:
    {{- include "submission-stack.labels" . | nindent 4 }}
spec:
  refreshPeriod: 24h0m0s
  vaultSecretDefinitions:
    - authentication:
        path: kubernetes
        role: {{ .Values.vault.role }}
        serviceAccount:
          name: default
      name: secret
      path: {{ .Values.vault.secretPath }}
  output:
    name: seq-admin-password-hash-secret
    stringData: 
      password: {{`'{{ .secret.seq_admin_password_hash }}'`}}
    type: Opaque

{{- end }}