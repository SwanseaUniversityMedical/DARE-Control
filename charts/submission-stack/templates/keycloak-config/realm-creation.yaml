{{- if .Values.keycloak.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-realm-autocreate
data: 
  dare-control.json: |-
    {
      "id": "2d79964b-f1eb-43e2-877f-035e7f420a3b",
      "realm": "Dare-Control",
      "displayName": "Dare-Control",
      "displayNameHtml": "",
      "notBefore": 0,
      "defaultSignatureAlgorithm": "RS256",
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 86400,
      "accessTokenLifespanForImplicitFlow": 900,
      "ssoSessionIdleTimeout": 3600,
      "ssoSessionMaxLifespan": 36000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 0,
      "clientSessionMaxLifespan": 0,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "oauth2DeviceCodeLifespan": 86400,
      "oauth2DevicePollingInterval": 5,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": true,
      "registrationEmailAsUsername": false,
      "rememberMe": false,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": true,
      "editUsernameAllowed": false,
      "bruteForceProtected": false,
      "permanentLockout": false,
      "maxTemporaryLockouts": 0,
      "bruteForceStrategy": "MULTIPLE",
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "id": "5924b7c2-0b1f-42e4-a0e9-cfaab0bbf950",
            "name": "dare-control-admin",
            "description": "",
            "composite": false,
            "clientRole": false,
            "containerId": "2d79964b-f1eb-43e2-877f-035e7f420a3b",
            "attributes": {}
          },
          {
            "id": "2c30064e-5b2f-4f08-8dbd-1bbb4cf8dcd2",
            "name": "default-roles-dare-control",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
              "realm": [
                "offline_access",
                "uma_authorization"
              ],
              "client": {
                "account": [
                  "manage-account",
                  "view-profile"
                ]
              }
            },
            "clientRole": false,
            "containerId": "2d79964b-f1eb-43e2-877f-035e7f420a3b",
            "attributes": {}
          },
          {
            "id": "273c9fa5-7e07-44f4-8e2e-ef5c1e735ed9",
            "name": "dare-tre-agent",
            "description": "",
            "composite": false,
            "clientRole": false,
            "containerId": "2d79964b-f1eb-43e2-877f-035e7f420a3b",
            "attributes": {}
          },
          {
            "id": "7e058247-8155-4526-a382-9b501f9d9aaa",
            "name": "Tech team",
            "description": "",
            "composite": false,
            "clientRole": false,
            "containerId": "2d79964b-f1eb-43e2-877f-035e7f420a3b",
            "attributes": {}
          },
          {
            "id": "ddc932e1-cf38-4e2a-bc43-d4cd0ad5db4e",
            "name": "dare-control-company",
            "description": "",
            "composite": false,
            "clientRole": false,
            "containerId": "2d79964b-f1eb-43e2-877f-035e7f420a3b",
            "attributes": {}
          },
          {
            "id": "3131c5bd-eddf-4047-8c4c-52a24837b24b",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "2d79964b-f1eb-43e2-877f-035e7f420a3b",
            "attributes": {}
          },
          {
            "id": "5e1c6bf7-c92e-4438-b21b-04ac063d98f6",
            "name": "dare-tre-admin",
            "description": "",
            "composite": true,
            "composites": {
              "realm": [
                "offline_access",
                "uma_authorization"
              ]
            },
            "clientRole": false,
            "containerId": "2d79964b-f1eb-43e2-877f-035e7f420a3b",
            "attributes": {}
          },
          {
            "id": "7b51e4b9-2993-4f08-bf50-f8713adcbcf8",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "2d79964b-f1eb-43e2-877f-035e7f420a3b",
            "attributes": {}
          }
        ],
        "client": {
          "Dare-Control-API": [
            {
              "id": "2ec866e3-4bf3-4187-aa25-f80c3949b04a",
              "name": "uma_protection",
              "description": "",
              "composite": false,
              "clientRole": true,
              "containerId": "9f08297e-0e26-4ece-8bba-b9522c485aee",
              "attributes": {}
            }
          ],
          "Dare-Control-UI": [
            {
              "id": "d1e46447-783c-4658-9799-f84b412a401f",
              "name": "Company",
              "description": "",
              "composite": false,
              "clientRole": true,
              "containerId": "614eb071-b0a5-40a5-ab4f-e8ccbe19354c",
              "attributes": {}
            },
            {
              "id": "55a6710a-32af-452d-aa79-913913be9afd",
              "name": "Dare-Control-user",
              "description": "",
              "composite": false,
              "clientRole": true,
              "containerId": "614eb071-b0a5-40a5-ab4f-e8ccbe19354c",
              "attributes": {}
            }
          ],
          "realm-management": [
            {
              "id": "10e6e239-18fe-43ef-ac4e-0f9c55dc921f",
              "name": "manage-events",
              "description": "${role_manage-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "3ea7c97b-2412-4347-947d-c44914c8da97",
              "name": "query-groups",
              "description": "${role_query-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "267f4e80-32f9-49c1-9ed8-3704cdf33fee",
              "name": "query-users",
              "description": "${role_query-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "560f08ad-8285-4f64-95da-4fd91a3f0b11",
              "name": "manage-users",
              "description": "${role_manage-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "0dad66ef-7a26-410b-9549-1f96f9f8597b",
              "name": "view-events",
              "description": "${role_view-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "cb2d371f-d443-4f39-9a09-abd37813904c",
              "name": "view-clients",
              "description": "${role_view-clients}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-clients"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "cecd86c3-4f47-4c00-ac19-2ffd32020d5d",
              "name": "view-realm",
              "description": "${role_view-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "2d28f1b9-7f43-47e9-8ce4-791356b44c79",
              "name": "view-identity-providers",
              "description": "${role_view-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "d2b84f14-7a5c-4f2b-aeb8-ee88209e7fc3",
              "name": "impersonation",
              "description": "${role_impersonation}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "58526795-8509-4acb-adb7-2d408e4d30bc",
              "name": "manage-clients",
              "description": "${role_manage-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "6d5032a7-7c17-4f5f-bf8c-d4bcb40b735e",
              "name": "manage-realm",
              "description": "${role_manage-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "68bc992c-292f-4297-8bea-9ec4423a385f",
              "name": "view-authorization",
              "description": "${role_view-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "073e42c3-7c1b-4ac7-af52-941df798f779",
              "name": "manage-identity-providers",
              "description": "${role_manage-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "3d090693-9b7a-42c7-985e-26005ac2c010",
              "name": "manage-authorization",
              "description": "${role_manage-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "da3031ac-5f5b-4ef1-851a-f1415055e3f8",
              "name": "view-users",
              "description": "${role_view-users}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-groups",
                    "query-users"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "2a17965c-7847-4bfb-8a1a-38e566daca40",
              "name": "query-realms",
              "description": "${role_query-realms}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "a8087fed-a110-4bf0-9fa0-9bc2b33b4bff",
              "name": "realm-admin",
              "description": "${role_realm-admin}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "manage-events",
                    "query-groups",
                    "query-users",
                    "manage-users",
                    "view-events",
                    "view-clients",
                    "view-realm",
                    "view-identity-providers",
                    "impersonation",
                    "manage-clients",
                    "manage-realm",
                    "view-authorization",
                    "manage-identity-providers",
                    "manage-authorization",
                    "view-users",
                    "query-realms",
                    "create-client",
                    "query-clients"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "2f718d3e-9aee-4738-9fc1-37569147b770",
              "name": "create-client",
              "description": "${role_create-client}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            },
            {
              "id": "184e7359-0548-4630-ae7b-70171f03fc50",
              "name": "query-clients",
              "description": "${role_query-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
              "attributes": {}
            }
          ],
          "security-admin-console": [],
          "admin-cli": [],
          "Dare-Control-Minio": [],
          "account-console": [],
          "Dare-Control-UI-Long": [
            {
              "id": "50587cf3-7023-4f23-ad4c-e46c3fedd43c",
              "name": "uma_protection",
              "composite": false,
              "clientRole": true,
              "containerId": "0ec55d4d-bd46-41f1-a35e-e7cf3e928afe",
              "attributes": {}
            }
          ],
          "broker": [
            {
              "id": "64b51b45-5ec3-4a04-82d6-a69cc8372607",
              "name": "read-token",
              "description": "${role_read-token}",
              "composite": false,
              "clientRole": true,
              "containerId": "9c146fd6-0471-4d6f-9a8a-bf6420c99faf",
              "attributes": {}
            }
          ],
          "account": [
            {
              "id": "7bfbe642-27e0-424f-84a6-cc54bfd622da",
              "name": "view-consent",
              "description": "${role_view-consent}",
              "composite": false,
              "clientRole": true,
              "containerId": "308ac13b-b72e-4667-9db9-f56e32d76cf1",
              "attributes": {}
            },
            {
              "id": "2c3a9fe1-a1c1-46cc-83a2-f491c0249fd6",
              "name": "manage-account",
              "description": "${role_manage-account}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "manage-account-links"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "308ac13b-b72e-4667-9db9-f56e32d76cf1",
              "attributes": {}
            },
            {
              "id": "8505a681-4cfc-4b25-b664-90fca2d412cf",
              "name": "view-applications",
              "description": "${role_view-applications}",
              "composite": false,
              "clientRole": true,
              "containerId": "308ac13b-b72e-4667-9db9-f56e32d76cf1",
              "attributes": {}
            },
            {
              "id": "f4698aea-c337-4a3a-a19b-f6c3233300e9",
              "name": "delete-account",
              "description": "${role_delete-account}",
              "composite": false,
              "clientRole": true,
              "containerId": "308ac13b-b72e-4667-9db9-f56e32d76cf1",
              "attributes": {}
            },
            {
              "id": "20157d2c-b6ff-4e3d-9929-076fb8655ff7",
              "name": "manage-account-links",
              "description": "${role_manage-account-links}",
              "composite": false,
              "clientRole": true,
              "containerId": "308ac13b-b72e-4667-9db9-f56e32d76cf1",
              "attributes": {}
            },
            {
              "id": "6d1c0b6e-7529-4b2d-bf8b-e9e695b5f7dc",
              "name": "view-groups",
              "description": "${role_view-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "308ac13b-b72e-4667-9db9-f56e32d76cf1",
              "attributes": {}
            },
            {
              "id": "8a81707d-0840-4617-809c-442259e9a0c6",
              "name": "view-profile",
              "description": "${role_view-profile}",
              "composite": false,
              "clientRole": true,
              "containerId": "308ac13b-b72e-4667-9db9-f56e32d76cf1",
              "attributes": {}
            },
            {
              "id": "b4fdae78-8ab3-431a-9f10-84743ea3b11c",
              "name": "manage-consent",
              "description": "${role_manage-consent}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "view-consent"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "308ac13b-b72e-4667-9db9-f56e32d76cf1",
              "attributes": {}
            }
          ]
        }
      },
      "groups": [
        {
          "id": "f9e439f2-1b25-4a6b-8b9e-c79b33540429",
          "name": "dare-control-admin",
          "path": "/dare-control-admin",
          "subGroups": [],
          "attributes": {
            "policy": [
              "consoleAdmin"
            ]
          },
          "realmRoles": [
            "default-roles-dare-control"
          ],
          "clientRoles": {
            "realm-management": [
              "manage-users"
            ]
          }
        },
        {
          "id": "61725787-7a2e-477b-9c74-6d546717b646",
          "name": "dare-control-company",
          "path": "/dare-control-company",
          "subGroups": [],
          "attributes": {},
          "realmRoles": [],
          "clientRoles": {}
        },
        {
          "id": "c7b6c79e-4e6f-4819-86b8-cafbbe625931",
          "name": "dare-control-users",
          "path": "/dare-control-users",
          "subGroups": [],
          "attributes": {},
          "realmRoles": [],
          "clientRoles": {}
        },
        {
          "id": "4bcb1837-ddb7-498e-a2f2-61eee277ee6e",
          "name": "dare-tre-admin",
          "path": "/dare-tre-admin",
          "subGroups": [],
          "attributes": {},
          "realmRoles": [],
          "clientRoles": {}
        },
        {
          "id": "672aec4b-7d2d-43aa-ab91-5ea6da3af682",
          "name": "dare-tre-user",
          "path": "/dare-tre-user",
          "subGroups": [],
          "attributes": {},
          "realmRoles": [],
          "clientRoles": {}
        }
      ],
      "defaultRole": {
        "id": "2c30064e-5b2f-4f08-8dbd-1bbb4cf8dcd2",
        "name": "default-roles-dare-control",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "2d79964b-f1eb-43e2-877f-035e7f420a3b"
      },
      "requiredCredentials": [
        "password"
      ],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpPolicyCodeReusable": false,
      "otpSupportedApplications": [
        "totpAppFreeOTPName",
        "totpAppGoogleName",
        "totpAppMicrosoftAuthenticatorName"
      ],
      "localizationTexts": {},
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": [
        "ES256"
      ],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyExtraOrigins": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256"
      ],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessExtraOrigins": [],
      "users": [
        {
          "id": "4998591d-5920-49b0-845d-da0c510a4132",
          "username": "service-account-dare-control-api",
          "emailVerified": false,
          "createdTimestamp": 1686745090283,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "Dare-Control-API",
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-dare-control",
            "offline_access",
            "uma_authorization"
          ],
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "709bbc75-f43b-41bc-a1ef-2d6ff3fabb00",
          "username": "service-account-dare-control-ui",
          "emailVerified": false,
          "createdTimestamp": 1686744932860,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "Dare-Control-UI",
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-dare-control",
            "offline_access",
            "uma_authorization"
          ],
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "91eac45e-f3d1-4cd4-8e2a-35b88d7e0057",
          "username": "service-account-dare-control-ui-long",
          "emailVerified": false,
          "createdTimestamp": 1713879112696,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "Dare-Control-UI-Long",
          "disableableCredentialTypes": [],
          "requiredActions": [
            "CONFIGURE_TOTP"
          ],
          "realmRoles": [
            "default-roles-dare-control"
          ],
          "clientRoles": {
            "Dare-Control-UI-Long": [
              "uma_protection"
            ]
          },
          "notBefore": 0,
          "groups": []
        },
        {
          "username": "globaladminuser",
          "enabled": true,
          "email": "globaladminuser@example.com",
          "firstName": "Global",
          "lastName": "AdminUser",
          "credentials": [
            {
              "type": "password",
              "value": "password123",
              "temporary": false
            }
          ],
          "realmRoles": [
            "dare-control-admin",
            "default-roles-dare-control"
          ],
          "groups": [
            "/dare-control-admin",
            "/dare-control-users"
          ]
        },
        {
          "username": "minioadmin",
          "enabled": true,
          "email": "minioadmin@example.com",
          "firstName": "Minio",
          "lastName": "Admin",
          "credentials": [
            {
              "type": "password",
              "value": "password123",
              "temporary": false
            }
          ],
          "realmRoles": [
            "dare-control-admin",
            "dare-tre-agent",
            "dare-control-company",
            "dare-tre-admin",
            "default-roles-dare-control"
          ],
          "groups": [
            "/dare-control-admin",
            "/dare-control-company",
            "/dare-tre-admin",
            "/dare-tre-user",
            "/dare-control-users"
          ]
        },
        {
          "username": "accessfromtretosubmission",
          "enabled": true,
          "email": "accessfromtretosubmission@example.com",
          "firstName": "Access",
          "lastName": "FromTreToSubmission",
          "credentials": [
            {
              "type": "password",
              "value": "password123",
              "temporary": false
            }
          ],
          "realmRoles": [
            "dare-tre-admin",
            "default-roles-dare-control"
          ]
        }
      ],
      "scopeMappings": [
        {
          "clientScope": "Dare-Tre-Control-API-cs",
          "roles": [
            "dare-tre-admin"
          ]
        },
        {
          "clientScope": "Dare-Control-API-cs",
          "roles": [
            "uma_authorization"
          ]
        },
        {
          "clientScope": "minio-authorization",
          "roles": [
            "uma_authorization"
          ]
        },
        {
          "clientScope": "Dare-Tre-Control-UI-cs",
          "roles": [
            "dare-tre-admin"
          ]
        },
        {
          "clientScope": "Dare-Control-UI-cs",
          "roles": [
            "uma_authorization"
          ]
        },
        {
          "clientScope": "Dare-Control-UI-Long-cs",
          "roles": [
            "uma_authorization"
          ]
        },
        {
          "clientScope": "offline_access",
          "roles": [
            "offline_access"
          ]
        }
      ],
      "clientScopeMappings": {
        "account": [
          {
            "client": "account-console",
            "roles": [
              "manage-account",
              "view-groups"
            ]
          }
        ]
      },
      "clients": [
        {
          "id": "308ac13b-b72e-4667-9db9-f56e32d76cf1",
          "clientId": "account",
          "name": "${client_account}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/Dare-Control/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/realms/Dare-Control/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "5a37a8ff-59f6-4ca8-8cbd-a55d6d78ea93",
          "clientId": "account-console",
          "name": "${client_account-console}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/Dare-Control/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/realms/Dare-Control/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "27e42de6-2df9-4674-b620-21e008f3bf91",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "2fe252e0-fcd5-46d0-a77d-66747b97d588",
          "clientId": "admin-cli",
          "name": "${client_admin-cli}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "client.use.lightweight.access.token.enabled": "true",
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "9c146fd6-0471-4d6f-9a8a-bf6420c99faf",
          "clientId": "broker",
          "name": "${client_broker}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "true",
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "9f08297e-0e26-4ece-8bba-b9522c485aee",
          "clientId": "Dare-Control-API",
          "name": "Dare-Control-API",
          "description": "",
          "rootUrl": "http://localhost:5034/",
          "adminUrl": "",
          "baseUrl": "http://localhost:5034/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "2e60b956-16bc-4dea-8b49-118a8baac5e5",
          "redirectUris": [
            "*"
          ],
          "webOrigins": [
            "*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1686745090",
            "backchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "http://localhost:5034/",
            "oauth2.device.authorization.grant.enabled": "false",
            "display.on.consent.screen": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "eb254ea8-aaa0-473d-8ef3-2ad32b4a4f90",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "befa0d4a-7706-4010-979b-51b97a738553",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "client_id",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "client_id",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "1a06556c-982c-4442-ace9-9be4627269ca",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "minio-authorization",
            "Dare-Control-API-cs",
            "basic",
            "email",
            "Dare-Control-UI-cs"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "c3ea3b00-4e31-4784-8112-4df204b7ce1e",
          "clientId": "Dare-Control-Minio",
          "name": "Dare-Control-Minio",
          "description": "",
          "rootUrl": "${authBaseUrl}",
          "adminUrl": "${authBaseUrl}",
          "baseUrl": "/Dare-Control/master/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": true,
          "clientAuthenticatorType": "client-secret",
          "secret": "8a11bbcd-693a-4549-bda4-3e978fcf4de1",
          "redirectUris": [
            "*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "access.token.lifespan": "3600",
            "client.secret.creation.time": "1687334351",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "use.jwks.url": "true",
            "backchannel.logout.revoke.offline.tokens": "false",
            "use.refresh.tokens": "true",
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "require.pushed.authorization.requests": "false",
            "acr.loa.map": "{}",
            "display.on.consent.screen": "false",
            "token.response.type.bearer.lower-case": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "minio-authorization",
            "Dare-Control-API-cs",
            "basic",
            "email",
            "Dare-Control-UI-cs"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "614eb071-b0a5-40a5-ab4f-e8ccbe19354c",
          "clientId": "Dare-Control-UI",
          "name": "Dare-Control-UI",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "1218304e-bf92-4706-83f6-912e0b04ecb9",
          "redirectUris": [
            "*"
          ],
          "webOrigins": [
            "*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": true,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "access.token.lifespan": "600",
            "client.secret.creation.time": "1686744845",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "use.refresh.tokens": "true",
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "client.offline.session.idle.timeout": "600",
            "tls.client.certificate.bound.access.tokens": "false",
            "require.pushed.authorization.requests": "false",
            "acr.loa.map": "{}",
            "display.on.consent.screen": "false",
            "client.offline.session.max.lifespan": "600",
            "client.session.max.lifespan": "600",
            "token.response.type.bearer.lower-case": "false",
            "client.session.idle.timeout": "600"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "074dd3ad-cbe8-44f4-bc1a-31cc55ee0aef",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "e787a499-9e77-41f1-8803-a0128f097a15",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "a480a3b8-b4f6-4820-8ae0-dc123995ca76",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "client_id",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "client_id",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "Dare-Control-UI-Long-cs",
            "profile",
            "roles",
            "minio-authorization",
            "Dare-Control-API-cs",
            "basic",
            "email",
            "Dare-Control-UI-cs"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "0ec55d4d-bd46-41f1-a35e-e7cf3e928afe",
          "clientId": "Dare-Control-UI-Long",
          "name": "Dare-Control-UI-Long",
          "description": "Dare-Control-UI-Long",
          "rootUrl": "https://localhost:7220/*",
          "adminUrl": "https://localhost:7220/*",
          "baseUrl": "https://localhost:7220/*",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": true,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "https://localhost:7220/*"
          ],
          "webOrigins": [
            "/*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "authorizationServicesEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "access.token.lifespan": "86400",
            "client.secret.creation.time": "1713879112",
            "post.logout.redirect.uris": "https://localhost:7220/*",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "use.refresh.tokens": "true",
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "client.offline.session.idle.timeout": "86400",
            "tls.client.certificate.bound.access.tokens": "false",
            "require.pushed.authorization.requests": "false",
            "acr.loa.map": "{}",
            "display.on.consent.screen": "false",
            "client.offline.session.max.lifespan": "86400",
            "client.session.max.lifespan": "86400",
            "client.session.idle.timeout": "86400",
            "token.response.type.bearer.lower-case": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "0074d535-4bbc-4482-9d90-f52308402c13",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "client_id",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "client_id",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "30e075d5-bb12-49e4-8315-61b1cee8b85f",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "e90721af-a761-4e2b-892e-4be5689374a4",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            }
          ],
          "defaultClientScopes": [
            "profile",
            "roles",
            "Dare-Tre-Control-UI-cs",
            "Dare-Tre-Agent",
            "Dare-Control-UI-cs",
            "web-origins",
            "acr",
            "Dare-Control-UI-Long-cs",
            "Dare-Tre-Control-API-cs",
            "minio-authorization",
            "Dare-Control-API-cs",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ],
          "authorizationSettings": {
            "allowRemoteResourceManagement": true,
            "policyEnforcementMode": "ENFORCING",
            "resources": [],
            "policies": [],
            "scopes": [],
            "decisionStrategy": "UNANIMOUS"
          }
        },
        {
          "id": "8a2e8ff2-c4ed-41a2-8d45-7035eedd9466",
          "clientId": "realm-management",
          "name": "${client_realm-management}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "true",
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "d42d9e4a-97a6-4e6e-b89a-5e6fe1fcaa8b",
          "clientId": "security-admin-console",
          "name": "${client_security-admin-console}",
          "rootUrl": "${authAdminUrl}",
          "baseUrl": "/admin/Dare-Control/console/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/admin/Dare-Control/console/*"
          ],
          "webOrigins": [
            "+"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "client.use.lightweight.access.token.enabled": "true",
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "8a0fb242-eb1e-4396-bbe1-ea0e1d8ee0c1",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "profile",
            "roles",
            "basic",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        }
      ],
      "clientScopes": [
        {
          "id": "06f9d3e6-ef79-4186-bdac-284204c576ae",
          "name": "Dare-Tre-Control-API-cs",
          "description": "",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "7b5588b6-9900-494e-a9d1-6ab404f1063d",
              "name": "Dare-Tre-Control-API-cs",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "22e1ea70-59d1-47ff-a97b-bbc44bad1b9e",
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "da3e68f5-be8e-4537-9d7c-843317fd9d68",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            },
            {
              "id": "97668481-7a37-4991-8393-3eef08aadb01",
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "5e02b3f4-9561-4275-ba05-aef327834bb7",
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${phoneScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "cd00b666-d52f-4d1b-abf3-14b3d17bacb9",
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "4cd82f7d-5ca1-4f4b-bfc4-7446fd88482e",
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "335a7872-83b6-4665-a28f-1d272bba2188",
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${emailScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "9c078157-ce56-499b-a659-a00519b99dca",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "b1c87c16-79f6-4d95-8fed-db059c503801",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "818537e3-93a0-435a-b085-dc684ce89efe",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${profileScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "86f3b268-4da0-4fdd-ab79-7ace8c73baa5",
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "76d2f6b0-d6a2-41e6-8d1b-2caa76e4c297",
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "adaa2078-da63-4f96-b43f-e306c3023e5d",
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "2c2a38cd-60b0-4c2a-a275-7f5294ac43bd",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "6a3ee6a8-906e-43be-a0b1-ab91b264e214",
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "349a0f17-d279-428e-8b14-b369a8a62967",
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "394fcb57-b163-425b-b71b-3eea80fa3a92",
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "d6d6440c-cc61-4925-83f3-2fd0195be16c",
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "3906be28-ca84-43ec-8b3b-863ecee4a65a",
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "904e5aac-7962-4164-bfa6-86fe6d970f43",
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "469b2ae2-e68b-4b8a-ac8c-bd1f447081ca",
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "914a4729-25c3-4217-b935-3290b48f7142",
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "long",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "eb9926dd-24d5-45a8-a2cb-bf64023c5bc2",
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "bfc8ef93-d787-4d02-aac9-e427b46ef9c8",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "e9b25ad7-810b-492e-bec9-a51ff4b14f85",
          "name": "Dare-Tre-Agent",
          "description": "",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          }
        },
        {
          "id": "58db7d3d-da4b-48c7-8dc2-ab11d9a47adb",
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "consent.screen.text": "${addressScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "096e9c62-feb7-49aa-93d7-cb8ac61a64b1",
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        },
        {
          "id": "754154d2-ce25-494c-851e-92fb21578e02",
          "name": "Dare-Control-API-cs",
          "description": "",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "086b5156-6ca4-4280-8730-400ae8f21cb5",
              "name": "Dare-Control-API-cs",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "included.client.audience": "Dare-Control-API",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "553a3e09-c435-4267-9415-8f20d96dc447",
          "name": "minio-authorization",
          "description": "",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "2d4f54a3-2e58-42c0-b14b-b94d8f5d90b3",
              "name": "minio-policy-mapper",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "aggregate.attrs": "true",
                "userinfo.token.claim": "false",
                "multivalued": "true",
                "user.attribute": "policy",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "policy"
              }
            },
            {
              "id": "e735e330-35a9-47a7-b18d-f26cc9d87042",
              "name": "Dare-Control-Minio-cs",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "included.client.audience": "Dare-Control-Minio",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "f2a1be75-c214-4bf1-bc8c-f14e3f397725",
          "name": "role_list",
          "description": "SAML role list",
          "protocol": "saml",
          "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "af44026d-7f17-411f-a4c2-d4d213b753de",
              "name": "role list",
              "protocol": "saml",
              "protocolMapper": "saml-role-list-mapper",
              "consentRequired": false,
              "config": {
                "single": "false",
                "attribute.nameformat": "Basic",
                "attribute.name": "Role"
              }
            }
          ]
        },
        {
          "id": "f7565012-3a57-495e-9519-e7074d8ec21e",
          "name": "Dare-Tre-Control-UI-cs",
          "description": "",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "b13d00b2-53f5-4026-902e-d02f4c669ede",
              "name": "Dare-Tre-Control-UI-cs",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "09521a94-4589-42ff-99a3-59a70fd8627e",
          "name": "Dare-Control-UI-cs",
          "description": "",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "268fb446-0821-40e1-8e56-f20d17d51f94",
              "name": "Dare-Control-UI-cs",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "included.client.audience": "Dare-Control-UI",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "a4cbbd61-c4e9-43c1-96ad-bcfc3e708246",
          "name": "Dare-Control-UI-Long-cs",
          "description": "Dare-Control-UI-Long-cs",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "0c9f211f-2181-478b-898f-365df3a060af",
              "name": "Dare-Control-UI-Long-cs",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "included.client.audience": "Dare-Control-UI-Long",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "ff227095-e221-4589-bc07-9facdb157da1",
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "consent.screen.text": "",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "313ef226-069b-4d22-bd94-f6403495f7fc",
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        },
        {
          "id": "a2661445-a210-4972-a16d-d5cc39200809",
          "name": "basic",
          "description": "OpenID Connect scope for add all basic claims to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "21b5a8a3-fbab-4cb6-9c24-32eaa90b59ef",
              "name": "auth_time",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "AUTH_TIME",
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "auth_time",
                "jsonType.label": "long"
              }
            },
            {
              "id": "57b4632f-9b81-4cba-a31f-ed683cfb5494",
              "name": "sub",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-sub-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "adf8dd08-3627-4942-b2e4-e17eab9f19ad",
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": "${rolesScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "d62833cc-13f5-4c68-b603-082ea761c325",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            },
            {
              "id": "ecc22dd4-5e5e-4c63-a068-7705530d047e",
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String"
              }
            },
            {
              "id": "04bf3299-3410-44a3-bc3d-c3a6315b7e0b",
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "15904a41-d8c7-41de-bb3e-990b3f7fad14",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "032a51c0-b5d7-4f1c-b250-28ea05c861d5",
          "name": "acr",
          "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "ba6f2b9b-3657-4460-9e86-5ab382d65564",
              "name": "acr loa level",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-acr-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
        "role_list",
        "profile",
        "web-origins",
        "acr",
        "Dare-Control-API-cs",
        "Dare-Control-UI-cs",
        "minio-authorization",
        "roles",
        "Dare-Tre-Control-API-cs",
        "email",
        "Dare-Tre-Control-UI-cs",
        "Dare-Tre-Agent",
        "Dare-Control-UI-Long-cs",
        "basic"
      ],
      "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
      ],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "referrerPolicy": "no-referrer",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {
        "password": "**********",
        "replyToDisplayName": "",
        "starttls": "true",
        "auth": "true",
        "port": "587",
        "host": "smtp.gmail.com",
        "replyTo": "",
        "from": "hiru@chi.swan.ac.uk",
        "fromDisplayName": "",
        "envelopeFrom": "",
        "ssl": "true",
        "user": "hiru"
      },
      "eventsEnabled": false,
      "eventsListeners": [
        "jboss-logging"
      ],
      "enabledEventTypes": [],
      "adminEventsEnabled": false,
      "adminEventsDetailsEnabled": false,
      "identityProviders": [
        {
          "alias": "ADDI",
          "displayName": "ADDI Workbench",
          "internalId": "59cb6f0e-518f-4f5d-b878-93e9f2f080ec",
          "providerId": "oidc",
          "enabled": true,
          "updateProfileFirstLoginMode": "on",
          "trustEmail": false,
          "storeToken": false,
          "addReadTokenRoleOnCreate": false,
          "authenticateByDefault": false,
          "linkOnly": false,
          "hideOnLogin": false,
          "firstBrokerLoginFlowAlias": "first broker login",
          "config": {
            "validateSignature": "true",
            "acceptsPromptNoneForwardFromClient": "false",
            "tokenUrl": "https://addib2c.b2clogin.com/addib2c.onmicrosoft.com/b2c_1a_signuporsignin_addiwb/oauth2/v2.0/token",
            "clientId": "hiru",
            "uiLocales": "false",
            "jwksUrl": "https://addib2c.b2clogin.com/addib2c.onmicrosoft.com/b2c_1a_signuporsignin_addiwb/discovery/v2.0/keys",
            "backchannelSupported": "false",
            "issuer": "https://addib2c.b2clogin.com/c201a81c-a008-4c46-8128-ddebdd6ac1be/v2.0/",
            "useJwksUrl": "true",
            "loginHint": "false",
            "pkceEnabled": "false",
            "clientAuthMethod": "client_secret_post",
            "authorizationUrl": "https://addib2c.b2clogin.com/addib2c.onmicrosoft.com/b2c_1a_signuporsignin_addiwb/oauth2/v2.0/authorize",
            "disableUserInfo": "false",
            "logoutUrl": "https://addib2c.b2clogin.com/addib2c.onmicrosoft.com/b2c_1a_signuporsignin_addiwb/oauth2/v2.0/logout",
            "syncMode": "IMPORT",
            "clientSecret": "**********",
            "passMaxAge": "false",
            "allowedClockSkew": "0",
            "prompt": "login",
            "guiOrder": "0"
          }
        }
      ],
      "identityProviderMappers": [],
      "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
          {
            "id": "60c13068-ad7c-4c96-98c1-9ff2a398a8b1",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-sha256-pairwise-sub-mapper",
                "saml-user-attribute-mapper",
                "oidc-full-name-mapper",
                "oidc-address-mapper",
                "saml-user-property-mapper",
                "oidc-usermodel-attribute-mapper",
                "saml-role-list-mapper",
                "oidc-usermodel-property-mapper"
              ]
            }
          },
          {
            "id": "52404e70-3623-4dfe-9b90-f8ac28807a87",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "b9d3b1ab-c658-4c5e-9e3b-e2480c05e8d3",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "045614cd-45ba-4e94-8cc1-1cb6830eb4f6",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "host-sending-registration-request-must-match": [
                "true"
              ],
              "client-uris-must-match": [
                "true"
              ]
            }
          },
          {
            "id": "523d9772-1a3e-45ad-a078-532e7f9c7152",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-address-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "oidc-full-name-mapper",
                "saml-user-attribute-mapper",
                "oidc-usermodel-attribute-mapper",
                "oidc-usermodel-property-mapper",
                "saml-user-property-mapper",
                "saml-role-list-mapper"
              ]
            }
          },
          {
            "id": "c8711610-ebad-41ea-a4b7-5553d9dd2518",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "2c34c4ab-0429-4a6d-8fae-33b03fc7cb57",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "max-clients": [
                "200"
              ]
            }
          },
          {
            "id": "2932f9f1-e6bf-419a-a7fc-a23e156366d9",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          }
        ],
        "org.keycloak.userprofile.UserProfileProvider": [
          {
            "id": "85a125c0-7042-4c34-9a29-48a9418134f3",
            "providerId": "declarative-user-profile",
            "subComponents": {},
            "config": {
              "kc.user.profile.config": [
                "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}],\"unmanagedAttributePolicy\":\"ENABLED\"}"
              ]
            }
          }
        ],
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "165188cd-9fba-4426-9111-8a251983969e",
            "name": "rsa-enc-generated",
            "providerId": "rsa-enc-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "RSA-OAEP"
              ]
            }
          },
          {
            "id": "2c6e2c49-80cd-4a7c-83d0-e1a31459bd8c",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "ed9f3308-8d06-4129-bd3a-d0e50baa2515",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "77fa207d-b12f-4563-af78-437e0a64f414",
            "name": "hmac-generated",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "HS256"
              ]
            }
          },
          {
            "id": "f1239800-3f40-4350-91ad-96f60167ea96",
            "name": "hmac-generated-hs512",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "HS512"
              ]
            }
          }
        ]
      },
      "internationalizationEnabled": false,
      "supportedLocales": [],
      "authenticationFlows": [
        {
          "id": "b3c0a532-7eeb-4d9a-bdbc-f0fde6faa509",
          "alias": "Account verification options",
          "description": "Method with which to verity the existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-email-verification",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Verify Existing Account by Re-authentication",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "c2d68de2-06da-4645-b878-537d07875e49",
          "alias": "Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "0d6bf889-40a9-4a19-862b-51cde9a0f9e8",
          "alias": "Direct Grant - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "545d40f5-45e3-43c3-b61d-169d68457398",
          "alias": "First broker login - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "8711d802-e166-4319-bb29-aba77567716d",
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-confirm-link",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Account verification options",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "1def9f96-16e0-45dc-92d7-cdcd20ecc686",
          "alias": "Justin1",
          "description": "",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": false,
          "authenticationExecutions": [
            {
              "authenticator": "auth-conditional-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 0,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "703aacc7-573f-4ead-8850-fa4149668632",
          "alias": "OTPForNonAPI",
          "description": "browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": false,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "OTPForNonAPI forms",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "92c2b0f7-eccb-437d-bf89-0044f76823ce",
          "alias": "OTPForNonAPI Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": false,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorConfig": "Omit tre admins",
              "authenticator": "conditional-user-role",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 21,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "afcbe5b7-68c7-4cfb-9d8d-0356203aafa6",
          "alias": "OTPForNonAPI forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": false,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "OTPForNonAPI Browser - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "7743734d-d67f-48a3-a816-88a5b044931a",
          "alias": "Reset - Conditional OTP",
          "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "1ab2fa23-46c5-4a42-a3ff-6b966db4ecb5",
          "alias": "User creation or linking",
          "description": "Flow for the existing/non-existing user alternatives",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "create unique user config",
              "authenticator": "idp-create-user-if-unique",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Handle Existing Account",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "5fdda394-fe25-449e-bec2-064d5e01f033",
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "First broker login - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "3f3d4ddd-514d-4d49-9686-375b1dcb4b5b",
          "alias": "browser",
          "description": "browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "forms",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "0d1106f5-8839-4d01-88d3-56ce9f9de4d8",
          "alias": "clients",
          "description": "Base authentication for clients",
          "providerId": "client-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "client-secret",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-secret-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-x509",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "802de697-a595-42fe-add0-d7399b433e1f",
          "alias": "direct grant",
          "description": "OpenID Connect Resource Owner Grant",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "direct-grant-validate-username",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "Direct Grant - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "c466497c-ccf9-4a7e-933a-ca70614c4479",
          "alias": "docker auth",
          "description": "Used by Docker clients to authenticate against the IDP",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "docker-http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "2799f53c-68c4-416c-b664-b2c983390ae2",
          "alias": "first broker login",
          "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "review profile config",
              "authenticator": "idp-review-profile",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "User creation or linking",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "c041dc95-be9f-47b8-92c4-da1f9bc60f96",
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Browser - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "39726990-151b-4a3d-9047-96bccf024518",
          "alias": "registration",
          "description": "registration flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-page-form",
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": true,
              "flowAlias": "registration form",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "996ac976-ee0d-4d76-b754-1c166f2e29db",
          "alias": "registration form",
          "description": "registration form",
          "providerId": "form-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-user-creation",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-password-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 50,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-recaptcha-action",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 60,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "418a1a04-23ac-4e37-9576-b06d1c2a4fdb",
          "alias": "reset credentials",
          "description": "Reset credentials for a user if they forgot their password or something",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "reset-credentials-choose-user",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-credential-email",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 40,
              "autheticatorFlow": true,
              "flowAlias": "Reset - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "ccb06105-d739-485f-9098-88987a42f83f",
          "alias": "saml ecp",
          "description": "SAML ECP Profile Authentication Flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        }
      ],
      "authenticatorConfig": [
        {
          "id": "ba9bde54-d261-4100-b3e7-4a11def3f7a1",
          "alias": "Omit tre admins",
          "config": {
            "negate": "true",
            "condUserRole": "dare-tre-admin"
          }
        },
        {
          "id": "97c8046b-8bee-4738-9834-78c6be0e5c3c",
          "alias": "create unique user config",
          "config": {
            "require.password.update.after.registration": "false"
          }
        },
        {
          "id": "3f38060b-1475-4259-8c16-c4a56eb5427f",
          "alias": "review profile config",
          "config": {
            "update.profile.on.first.login": "missing"
          }
        }
      ],
      "requiredActions": [
        {
          "alias": "CONFIGURE_TOTP",
          "name": "Configure OTP",
          "providerId": "CONFIGURE_TOTP",
          "enabled": true,
          "defaultAction": true,
          "priority": 10,
          "config": {}
        },
        {
          "alias": "TERMS_AND_CONDITIONS",
          "name": "Terms and Conditions",
          "providerId": "TERMS_AND_CONDITIONS",
          "enabled": false,
          "defaultAction": false,
          "priority": 20,
          "config": {}
        },
        {
          "alias": "UPDATE_PASSWORD",
          "name": "Update Password",
          "providerId": "UPDATE_PASSWORD",
          "enabled": true,
          "defaultAction": false,
          "priority": 30,
          "config": {}
        },
        {
          "alias": "UPDATE_PROFILE",
          "name": "Update Profile",
          "providerId": "UPDATE_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 40,
          "config": {}
        },
        {
          "alias": "VERIFY_EMAIL",
          "name": "Verify Email",
          "providerId": "VERIFY_EMAIL",
          "enabled": true,
          "defaultAction": false,
          "priority": 50,
          "config": {}
        },
        {
          "alias": "delete_account",
          "name": "Delete Account",
          "providerId": "delete_account",
          "enabled": false,
          "defaultAction": false,
          "priority": 60,
          "config": {}
        },
        {
          "alias": "webauthn-register",
          "name": "Webauthn Register",
          "providerId": "webauthn-register",
          "enabled": true,
          "defaultAction": false,
          "priority": 70,
          "config": {}
        },
        {
          "alias": "webauthn-register-passwordless",
          "name": "Webauthn Register Passwordless",
          "providerId": "webauthn-register-passwordless",
          "enabled": true,
          "defaultAction": false,
          "priority": 80,
          "config": {}
        },
        {
          "alias": "delete_credential",
          "name": "Delete Credential",
          "providerId": "delete_credential",
          "enabled": true,
          "defaultAction": false,
          "priority": 100,
          "config": {}
        },
        {
          "alias": "update_user_locale",
          "name": "Update User Locale",
          "providerId": "update_user_locale",
          "enabled": true,
          "defaultAction": false,
          "priority": 1000,
          "config": {}
        }
      ],
      "browserFlow": "OTPForNonAPI",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "firstBrokerLoginFlow": "first broker login",
      "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaAuthRequestedUserHint": "login_hint",
        "clientOfflineSessionMaxLifespan": "0",
        "oauth2DevicePollingInterval": "5",
        "clientSessionIdleTimeout": "0",
        "actionTokenGeneratedByUserLifespan-execute-actions": "",
        "actionTokenGeneratedByUserLifespan-verify-email": "",
        "clientOfflineSessionIdleTimeout": "0",
        "actionTokenGeneratedByUserLifespan-reset-credentials": "",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false",
        "cibaExpiresIn": "120",
        "oauth2DeviceCodeLifespan": "86400",
        "actionTokenGeneratedByUserLifespan-idp-verify-account-via-email": "",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "frontendUrl": "",
        "acr.loa.map": "{}",
        "shortVerificationUri": ""
      },
      "keycloakVersion": "26.0.6",
      "userManagedAccessAllowed": false,
      "organizationsEnabled": false,
      "clientProfiles": {
        "profiles": []
      },
      "clientPolicies": {
        "policies": []
      }
    }

{{- end }}