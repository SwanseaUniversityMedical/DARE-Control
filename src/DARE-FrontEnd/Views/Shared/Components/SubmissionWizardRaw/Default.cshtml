@using BL.Models.ViewModels
@using DARE_FrontEnd.Formatters
@model BL.Models.ViewModels.AddiSubmissionWizard
@{
    ViewData["Title"] = "Submission Wizard";
}


@using (Html.BeginForm("", "", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmMain2" }))
{
    @Html.HiddenFor(x => x.ProjectId)
    {
        <div class="modal-body">
            <div class="form-group">
                @Html.LabelFor(x => x.ProjectName,new {@class="form-label fw-bold"})
                @Html.DisplayFor(x => x.ProjectName, new {@class="form-control"})
            </div>
            <div class="col-md-6 mb-4">
                @Html.LabelFor(x => x.TESName,new {@class="form-label fw-bold"})
                @Html.TextBoxFor(x => x.TESName, new {@class="form-control"})
            </div>

            <div class="mb-4">
                @Html.LabelFor(x => x.TESDescription,new {@class="form-label fw-bold"})
                @Html.TextAreaFor(x => x.TESDescription, new {@class="form-control"})
            </div>
            <div class="col-md-4 mb-4">
                <div class="form-label fw-bold">Select TREs</div>
                @for (var i = 0; i < Model.TreRadios.Count(); i++)
                {
                    <div class="d-flex align-items-center justify-content-between">
                        <div class="form-check">
                            @Html.HiddenFor(x => x.TreRadios[i].Name)
                            @Html.CheckBoxFor(x=>x.TreRadios[i].IsSelected, new {@class = "form-check-input"})
                            <label class="form-check-label" for="flexCheckDefault">
                                @Model.TreRadios[i].Name
                            </label>
                        </div>
                        @if (Model.TreRadios[i].IsOnline)
                        {
                            <span class="badge  px-2 badge-sm bg-success text-light rounded-pill m-0 ms-3">
                                <i class="fa-solid fa-check-circle me-1"></i> Online
                            </span>
                        }
                        else
                        {
                            <span class="badge  px-2 badge-sm bg-grey text-dark rounded-pill m-0 ms-3">
                                <i class="fa-solid fa-ban me-1"></i> Offline
                            </span>
                        }
                    </div>
                }
            </div>
            <div class="mb-4">
                @Html.LabelFor(x => x.Query,new {@class="form-label fw-bold"})
                @Html.TextAreaFor(x => x.Query, new {@class="form-control"})
            </div>

            <label class="form-label fw-bold">Executors</label>
            <div class="col-md-12 mb-4">
                <table id="executorsTable" class="table">
                    <thead>
                        <tr>
                            <th class="col-md-5">Image</th>
                            <th class="col-md-7">Environment Variables</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr style="vertical-align: top;">
                            <td class="border-0">
                                <input type="text" id="image" name="image" class="form-control" />
                            </td>
                            <td class="border-0">
                                <div class="d-flex align-items-start justify-content-between">
                                    <div class="w-100 me-2">
                                        <input type="text" id="environmentvariables" name="environmentvariables" class="form-control" data-role="tagsinput" />
                                        <p><small class="form-text text-muted">Separate environment variables with Enter ↵ key, example Envvar=myVal </small></p>
                                    </div>
                                    <a href="#" id="addExecutorButton" class="btn btn-sm btn-secondary">Add</a>
                                </div>
                            </td>
                        </tr>
                        @if (Model.Executors != null)
                        {
                            @foreach (var executor in Model.Executors)
                            {
                                <tr>
                                    <td class="col-md-5">@executor.Image</td>
                                    <td class="col-md-7">@executor.Env</td>
                                </tr>
                            }
                        }

                    </tbody>
                </table>
            </div>

            <label class="form-label fw-bold">Raw Json Input </label>
            <div id="RawInput" class="form-group">
                @Html.TextAreaFor(m => m.RawInput, new {@class="form-control"})
            </div>

        </div>

        <div class="modal-footer">
            <div class="hero-block-1">

                <button type="button" class="btn btn-sm btn-link" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-sm btn-primary">Submit</button>
            </div>
        </div>
    }
}






