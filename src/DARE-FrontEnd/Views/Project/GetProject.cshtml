@using BL.Models.ViewModels
@model BL.Models.ViewModels.ProjectUserTre
@{
    string pageName = Model.Name;

    ViewData["Title"] = @pageName;
    int pId = Model.Id;

}



<div class="container-lg mt-4 p-4 bg-white border-1 shadow-sm">
    <div class="d-flex align-items-center justify-content-between">
        <div>
            <h1 class="fs-3 mb-0">@Model.Name</h1>
            <p class="font-monospace text-muted small mb-0">#@Model.Id</p>
        </div>
        @*<p class="badge py-2 px-3 badge-lg bg-warning text-dark rounded-pill m-0">
        <i class="fa-solid fa-flag me-2"></i>Embargoed: @project.MarkAsEmbargoed
        </p>*@
    </div>
    <div class="mt-4">
        <ul class="nav nav-underline border-bottom" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <a href="#about" class="nav-link text-dark active" id="about" data-bs-toggle="tab" data-bs-target="#project" role="tab" aria-controls="Project" aria-selected="true">About</a>
            </li>
            <li class="nav-item" role="presentation">
                <a href="#submissions" class="nav-link text-dark" id="submissions" data-bs-toggle="tab" data-bs-target="#submissions-tab" role="tab" aria-controls="submissions" aria-selected="false">
                    <div class="d-flex justify-content-between align-items-center">
                        <span>Submissions</span>
                        <span class="badge bg-dark-blue rounded-pill ms-2">@Model.Submissions.Count</span>
                    </div>
                </a>
            </li>
            <li class="nav-item" role="presentation">
                <a href="#people" class="nav-link text-dark" id="people" data-bs-toggle="tab" data-bs-target="#userMembership" role="tab" aria-controls="User Membership" aria-selected="false">
                    <div class="d-flex justify-content-between align-items-center">
                        <span>People</span>
                        <span class="badge bg-dark-blue rounded-pill ms-2">@Model.Users.Count</span>
                    </div>
                </a>
            </li>
            <li class="nav-item" role="presentation">
                <a href="#tre" class="nav-link text-dark" id="treLink" data-bs-toggle="tab" data-bs-target="#tre" role="tab" aria-controls="Tre" aria-selected="false">
                    <div class="d-flex justify-content-between align-items-center">
                        <span>TREs</span>
                        <span class="badge bg-dark-blue rounded-pill ms-2">@Model.Tres.Count</span>
                    </div>
                </a>
            </li>
        </ul>


        <div class="tab-content py-5" id="myTabContent">
            <div class="tab-pane fade show active" id="project" role="tabpanel" aria-labelledby="home-tab">
                <div class="row">
                    <div class="col-md-6">
                        @if (User.IsInRole("dare-control-admin"))
                        {
                            <a href="@Url.Action("SaveProjectForm", "Project",new{Projectid=@Model.Id})" class="btn btn-sm btn-primary mb-3">Edit</a>
                        }
                        @{
                            var minio = @ViewBag.URLBucket;
                        }

                        <p>
                            <a class="btn btn-sm btn-primary me-2" target="_blank" href="http://@minio/browser/@Model.SubmissionBucket" rel="noopener">Submission Bucket <i class="fa fa-external-link ms-2"></i></a>
                            <a class="btn btn-sm btn-outline-secondary" target="_blank" href="http://@minio/browser/@Model.OutputBucket" rel="noopener">Output Bucket<i class="fa fa-external-link ms-2"></i></a>

                        </p>
                        @{
                            if (Model.ProjectOwner == null || Model.ProjectOwner == "")
                            {
                            }
                            else
                            {
                                <p>
                                    Project Lead: <strong>@Model.ProjectOwner</strong>
                                </p>
                            }
                        }
                        @{
                            if (Model.ProjectContact == null || Model.ProjectContact == "")
                            {
                            }
                            else
                            {
                                <p>Project Contact: <strong>@Model.ProjectContact</strong></p>
                            }
                        }

                        @{
                            if (Model.ProjectDescription == null || Model.ProjectDescription == "")
                            {
                            }
                            else
                            {
                                <p>
                                    @*Project Description: *@ @Model.ProjectDescription
                                </p>
                            }
                        }
                        <p class="text-muted fs-7 mt-4">
                            Project Start Date: @Model.StartDate.ToString("dd/MM/yyyy") <br />
                            Project End Date: @Model.EndDate.ToString("dd/MM/yyyy")
                        </p>

                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="submissions-tab" role="tabpanel" aria-labelledby="submissions">
                @if (ViewBag.UserCanDoSubmissions)
                {
                    <div class="d-flex align-items-center mb-3">

                        <a class="btn btn-primary btn-sm d-flex align-items-center mb-3 text-decoration-none" id="showModalButton">
                            <i class="fa fa-table-columns align-middle me-2"></i>
                            <span>Submit with Crate Submission Wizard</span>
                        </a>

                        <a class="btn btn-link btn-sm d-flex align-items-center mb-3 text-decoration-none" id="showModalButton2">
                            <i class="fa fa-table-columns align-middle me-2"></i>
                            <span>Submit with SQL TES Wizard</span>
                        </a>

                        <a class="btn btn-link btn-sm d-flex align-items-center mb-3 text-decoration-none" id="showModalButton3">
                            <i class="fa fa-table-columns align-middle me-2"></i>
                            <span>Submit with GraphQL TES Wizard</span>
                        </a>

                        <a asp-controller="Submission" asp-action="Instructions" class="btn btn-link btn-sm d-flex align-items-center mb-3 me-2 text-decoration-none">
                            <i class="fa fa-info-circle align-middle me-2"></i>
                            <span>Submit with API</span>
                        </a>

                    </div>
                    <hr class="d-flex my-4">
                }


                @await Html.PartialAsync("_SubmissionList", new SubmissionList(){Submissions  = Model.Submissions.Where(x => x.Parent == null).ToList(), UseParent = false})

            </div>
            <div class="tab-pane fade" id="userMembership" role="tabpanel" aria-labelledby="people">
                @if (User.IsInRole("dare-control-admin"))
                {
                    <button type="button" class="btn btn-sm btn-primary mb-3" id="addUser"><i class="fa fa-plus me-2"></i> Add User</button>
                }

                <div class="row">
                    <div class="col-lg-5 col-md-6">
                        <ul class="list-group">
                            @foreach (var user in Model.Users)
                            {
                                if (user.FullName == "" || user.FullName == null)
                                {
                                    user.FullName = user.Name;
                                }

                                <li class="list-group-item justify-content-between d-flex">
                                    <a href="@Url.Action("GetUser", "User", new { id = user.Id })">@user.FullName</a>
                                    @if (User.IsInRole("dare-control-admin"))
                                    {
                                        <a href="@Url.Action("RemoveUserFromProject", "Project", new { ProjectId = Model.Id, UserId = @user.Id })">
                                            <span class="fa fa-trash" data-bs-toggle="tooltip" data-bs-title="Remove user from project"></span>
                                        </a>
                                    }
                                </li>
                            }
                        </ul>
                    </div>
                </div>

            </div>
            <div class="tab-pane fade" id="tre" role="tabpanel" aria-labelledby="contact-tab">
                @if (User.IsInRole("dare-control-admin"))
                {
                    <button type="button" class="btn btn-sm btn-primary mb-3" id="addTre"><i class="fa fa-plus me-2"></i>Add TRE</button>
                }
                <div class="row">
                    <div class="col-lg-5 col-md-6">
                        <ul class="list-group">
                            @foreach (var tre in Model.Tres)
                            {
                                <li class="list-group-item justify-content-between d-flex">
                                    <a href="@Url.Action("GetATre", "Tre", new { id = tre.Id })" class="fw-bold">@tre.Name</a>
                                    @{
                                        var doesNotHaveDecision = true;
                                    }
                                    <span class="d-flex align-items-center">
                                        @foreach (var decision in tre.ProjectTreDecisions.Where(x => x.SubmissionProj.Id == Model.Id))
                                        {





                                            @if (decision.Decision == BL.Models.Enums.Decision.Approved)
                                            {
                                                doesNotHaveDecision = false;
                                                <span class="badge  px-2 badge-sm bg-success text-light rounded-pill m-0 me-3">
                                                    <i class="fa-solid fa-check-circle me-1"></i> @decision.Decision.ToString()
                                                </span>
                                            }
                                            else if (decision.Decision == BL.Models.Enums.Decision.Undecided)
                                            {
                                                doesNotHaveDecision = false;

                                                <span class="badge  px-2 badge-sm bg-grey text-dark rounded-pill m-0 me-3">
                                                    <i class="fa-solid fa-circle-notch fa-spin me-1"></i> @decision.Decision.ToString()
                                                </span>
                                            }
                                            else if (decision.Decision == BL.Models.Enums.Decision.Rejected)
                                            {
                                                doesNotHaveDecision = false;

                                                <span class="badge  px-2 badge-sm bg-danger text-light rounded-pill m-0 me-3">
                                                    <i class="fa-solid fa-close me-1"></i> @decision.Decision.ToString()
                                                </span>
                                            }


                                        }

                                        @if (doesNotHaveDecision == true)
                                        {
                                            <span class="badge  px-2 badge-sm bg-grey text-dark rounded-pill m-0 me-3">
                                                <i class="fa-solid fa-circle-notch fa-spin me-1"></i> Undecided
                                            </span>


                                        }
                                    @if (User.IsInRole("dare-control-admin"))
                                    {
                                        <a href="@Url.Action("RemoveTreFromProject", "Project", new { ProjectId = Model.Id, TreId = tre.Id })">
                                            <span class="fa fa-trash" data-bs-toggle="tooltip" data-bs-title="Remove TRE from project"></span>
                                        </a>
                                    }
                                    </span>
                                </li>

                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bd-user-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="userModal">
    <div class="modal-dialog modal-md shadow-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Add User</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <div class="table-responsive">
                            <table class="table" id="UserList">
                                <caption>List of users on project</caption>
                                @foreach (var user in Model.UserItemList)
                                {
                                    <tr>
                                        <td>
                                            <input type="checkbox" value="@user.Value" id="@user.Value" name="selectedUser" class="form-check-input me-2" />
                                            @user.Text
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-link" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-sm btn-primary" onclick="SaveUserList(@Model.Id)">Add</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bd-tre-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="treModal">
    <div class="modal-dialog modal-md shadow-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Add TRE</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <div class="table-responsive">
                            <table class="table " id="TreList">
                                <caption>List of Tres on Project</caption>
                                @foreach (var tre in Model.TreItemList)
                                {
                                    <tr>
                                        <td>
                                            <input type="checkbox" value="@tre.Value" id="Tre_@tre.Value" name="selectedTre" class="form-check-input me-2" />
                                            @tre.Text
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-link" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-sm btn-primary" onclick="SaveTreList(@Model.Id)">Add</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade bd-tre-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="submissionModal">
    <div class="modal-dialog modal-md shadow-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Create Submission</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            @await Component.InvokeAsync("SubmissionWizerd", new {projectId=pId})
        </div>
    </div>
</div>

<div class="modal fade bd-tre-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="submissionModal1">
    <div class="modal-dialog modal-lg shadow-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Create Submission</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            @await Component.InvokeAsync("SubmissionWizardRaw", new {projectId=pId})
        </div>
    </div>
</div>

<div class="modal fade bd-tre-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" id="submissionModal2">
    <div class="modal-dialog modal-lg shadow-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Create Submission</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            @await Component.InvokeAsync("SubmissionWizardRawGraphQL", new {projectId=pId})
        </div>
    </div>
</div>