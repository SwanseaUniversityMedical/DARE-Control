@model BL.Models.Submission
@{
    ViewData["Title"] = "@Model.Name";


}


<div class="container-lg mt-4 p-4 bg-white border-1 shadow-sm">
    <div class="d-flex align-items-center justify-content-between">
        <div>
            <h1 class="fs-3 mb-0">@Model.TesName</h1>
            <p class="text-muted small mb-0">Submission ID: @Model.Id</p>
        </div>
        <div>
            <div class="text-end">
                @{
                    //var Date1 = DateTime.Now.AddDays(-3).AddHours(-2).AddMinutes(-33);
                    var startDate = Model.StartTime;
                    var currTime = DateTime.Now;
                    TimeSpan result1 = currTime.Subtract(startDate);
                    int days = result1.Days;
                    int hours = result1.Hours;
                    int minutes = result1.Minutes;
                    switch (Model.Status)
                    {

                        case BL.Models.Enums.StatusType.DataOutApproved:
                            <h6><span class="badge bg-dark-blue rounded-pill">@Model.Status @Model.EndTime</span></h6>
                            break;
                        default:
                            <div class="mb-0">
                                <h6 class="mb-0">
                                    <span class="badge bg-dark-blue rounded-pill">@Model.Status</span>
                                </h6>
                                <span class="small">Elapsed Time: @days days, @hours hours, @minutes minute</span>
                            </div>
                            break;
                    }
                }
            </div>
        </div>
    </div>
    <hr class="d-flex my-4 mb-5">
    <p>
        Project: <a href="@Url.Action("GetProject", "Project", new { id = Model.Project.Id })">@Model.Project.Name</a><br />
        Submitted by: <a href="@Url.Action("GetUser", "User", new { id = @Model.SubmittedBy.Id })">@Model.SubmittedBy.Name</a><br />
        Date submitted: @*TODO: talk to justin might need to add a submission time in the model*@
    </p>
    <p>
        Minio URL: <a href="#">insert link here</a><br />
        Submission bucket: <a href="#">insert link here</a><br />
        Output bucket: <a href="#">insert link here</a>
    </p>
    <button id="showJsonButton" class="btn btn-sm btn-primary"><small>View Query</small></button>
    <div class="json-viewer" id="jsonViewer"></div>
    <div>
        <h6>TRE's Submitted To</h6>
        @{
            @foreach (var tre in Model.Children)
            {
                var endpointName = @tre.EndPoint?.Name.ToString();
                if (endpointName == null)
                {
                    endpointName = "None";
                }
                //<p class="mb-0">@Model.EndPoint.Name</p>
                <p class="mb-0">@endpointName</p>
                switch (tre.Status)
                {

                    case BL.Models.Enums.StatusType.DataOutApproved:
                        <h6><span class="badge bg-dark-blue rounded-pill">@tre.Status</span>End Time: @Model.EndTime</h6>
                        break;

                    default:
                        <h6><span class="badge bg-dark-blue rounded-pill">@tre.Status</span> Elapsed Time: @days days, @hours hours, @minutes minutes</h6>
                        break;
                }
            }
        }
    </div>
    
</div>

<script>
    var tesJson = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TesJson));
    var jsonViewer = document.getElementById("jsonViewer");
    var showJsonButton = document.getElementById("showJsonButton");
    var jsonVisible = false;

    showJsonButton.addEventListener("click", function () {
        if (jsonVisible) {
            jsonViewer.style.display = "none";
            jsonVisible = false;
        } else {
            jsonViewer.textContent = JSON.stringify(tesJson)
            jsonViewer.style.display = "block";
            jsonVisible = true;
        }
    });
</script>