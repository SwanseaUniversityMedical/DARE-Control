name: PR Update

on:
  pull_request:
    types:
      - opened
      - synchronize

permissions:
  # read on both needed for changes detection
  pull-requests: read
  contents: read
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    # Detect which files have been changed on this PR's full history
    uses: SwanseaUniversityMedical/workflows/.github/workflows/changes-pr.yaml@v5.0.1
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      filters: |
        api-container:
          - './.github/workflows/on-pr-update.yaml'
          - 'src/DARE-API/**'
          - 'src/BL/**'
        ui-container:
          - './.github/workflows/on-pr-update.yaml'
          - 'src/DARE-FrontEnd/**'
          - 'src/BL/**'
        egress-api-container:
          - './.github/workflows/on-pr-update.yaml'
          - 'src/Data-Egress-API/**'
          - 'src/BL/**'
        egress-ui-container:
          - './.github/workflows/on-pr-update.yaml'
          - 'src/Data-Egress-UI/**'
          - 'src/BL/**'
        tre-api-container:
          - './.github/workflows/on-pr-update.yaml'
          - 'src/TRE-API/**'
          - 'src/BL/**'
        tre-ui-container:
          - './.github/workflows/on-pr-update.yaml'
          - 'src/TRE-UI/**'
          - 'src/BL/**'
        tre-hasura-container:
          - './.github/workflows/on-pr-update.yaml'
          - 'src/Tre-Hasura/**'
          - 'src/BL/**'
        chart:
        - './.github/workflows/on-pr-update.yaml'
        - 'charts/**'

    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}

  api-container:
    # Build the api container and push it as :pr-42 and :pr-42-fe45b3h
    needs: changes
    if: fromJSON(needs.changes.outputs.changes).api-container == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/build-pr-container.yaml@v5.0.1
    with:
      job-name: api-container
      registry: ${{ vars.HARBOR_REGISTRY }}
      registry-user: ${{ vars.HARBOR_USER }}
      registry-repo: ${{ vars.HARBOR_PROJECT }}/${{ vars.HARBOR_REPO }}-main-api
      cosign-public-key: ${{ vars.COSIGN_PUBLIC_KEY }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      build-file: src/DARE-API/Dockerfile
      build-context: src/

    secrets:
      cosign-private-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
      cosign-password: ${{ secrets.COSIGN_PASSWORD }}
      registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  ui-container:
    # Build the ui container and push it as :pr-42 and :pr-42-fe45b3h
    needs: changes
    if: fromJSON(needs.changes.outputs.changes).ui-container == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/build-pr-container.yaml@v5.0.1
    with:
      job-name: ui-container
      registry: ${{ vars.HARBOR_REGISTRY }}
      registry-user: ${{ vars.HARBOR_USER }}
      registry-repo:  ${{ vars.HARBOR_PROJECT }}/${{ vars.HARBOR_REPO }}-main-ui
      cosign-public-key: ${{ vars.COSIGN_PUBLIC_KEY }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      build-file: src/DARE-FrontEnd/Dockerfile
      build-context: src/

    secrets:
      cosign-private-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
      cosign-password: ${{ secrets.COSIGN_PASSWORD }}
      registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  egress-api-container:
    # Build the egress-api container and push it as :pr-42 and :pr-42-fe45b3h
    needs: changes
    if: fromJSON(needs.changes.outputs.changes).egress-api-container == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/build-pr-container.yaml@v5.0.1
    with:
      job-name: egress-api-container
      registry: ${{ vars.HARBOR_REGISTRY }}
      registry-user: ${{ vars.HARBOR_USER }}
      registry-repo: ${{ vars.HARBOR_PROJECT }}/${{ vars.HARBOR_REPO }}-egress-api
      cosign-public-key: ${{ vars.COSIGN_PUBLIC_KEY }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      build-file: src/Data-Egress-API/Dockerfile
      build-context: src/

    secrets:
      cosign-private-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
      cosign-password: ${{ secrets.COSIGN_PASSWORD }}
      registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  egress-ui-container:
    # Build the egress-ui container and push it as :pr-42 and :pr-42-fe45b3h
    needs: changes
    if: fromJSON(needs.changes.outputs.changes).egress-ui-container == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/build-pr-container.yaml@v5.0.1
    with:
      job-name: egress-ui-container
      registry: ${{ vars.HARBOR_REGISTRY }}
      registry-user: ${{ vars.HARBOR_USER }}
      registry-repo: ${{ vars.HARBOR_PROJECT }}/${{ vars.HARBOR_REPO }}-egress-ui
      cosign-public-key: ${{ vars.COSIGN_PUBLIC_KEY }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      build-file: src/Data-Egress-UI/Dockerfile
      build-context: src/

    secrets:
      cosign-private-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
      cosign-password: ${{ secrets.COSIGN_PASSWORD }}
      registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  tre-api-container:
    # Build the tre-api container and push it as :pr-42 and :pr-42-fe45b3h
    needs: changes
    if: fromJSON(needs.changes.outputs.changes).tre-api-container == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/build-pr-container.yaml@v5.0.1
    with:
      job-name: tre-api-container
      registry: ${{ vars.HARBOR_REGISTRY }}
      registry-user: ${{ vars.HARBOR_USER }}
      registry-repo: ${{ vars.HARBOR_PROJECT }}/${{ vars.HARBOR_REPO }}-tre-api
      cosign-public-key: ${{ vars.COSIGN_PUBLIC_KEY }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      build-file: src/TRE-API/Dockerfile
      build-context: src/

    secrets:
      cosign-private-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
      cosign-password: ${{ secrets.COSIGN_PASSWORD }}
      registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  tre-ui-container:
    # Build the tre-ui container and push it as :pr-42 and :pr-42-fe45b3h
    needs: changes
    if: fromJSON(needs.changes.outputs.changes).tre-ui-container == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/build-pr-container.yaml@v5.0.1
    with:
      job-name: tre-ui-container
      registry: ${{ vars.HARBOR_REGISTRY }}
      registry-user: ${{ vars.HARBOR_USER }}
      registry-repo: ${{ vars.HARBOR_PROJECT }}/${{ vars.HARBOR_REPO }}-tre-ui
      cosign-public-key: ${{ vars.COSIGN_PUBLIC_KEY }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      build-file: src/TRE-UI/Dockerfile
      build-context: src/

    secrets:
      cosign-private-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
      cosign-password: ${{ secrets.COSIGN_PASSWORD }}
      registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  tre-hasura-container:
    # Build the tre-hasura container and push it as :pr-42 and :pr-42-fe45b3h
    needs: changes
    if: fromJSON(needs.changes.outputs.changes).tre-hasura-container == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/build-pr-container.yaml@v5.0.1
    with:
      job-name: tre-hasura-container
      registry: ${{ vars.HARBOR_REGISTRY }}
      registry-user: ${{ vars.HARBOR_USER }}
      registry-repo: ${{ vars.HARBOR_PROJECT }}/${{ vars.HARBOR_REPO }}-tre-hasura
      cosign-public-key: ${{ vars.COSIGN_PUBLIC_KEY }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      build-file: src/Tre-Hasura/Dockerfile
      build-context: src/

    secrets:
      cosign-private-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
      cosign-password: ${{ secrets.COSIGN_PASSWORD }}
      registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  chart:
    # Build the chart and push it as :pr-42 and :pr-42-fe45b3h
    needs: changes
    if: fromJSON(needs.changes.outputs.changes).chart == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/on-pr-update-chart.yaml@v5.0.1
    with:
      job-name: chart
      chart: charts/control
      chart-registry: ${{ vars.HARBOR_REGISTRY }}
      chart-registry-user: ${{ vars.HARBOR_USER }}
      chart-registry-project: ${{ vars.HARBOR_PROJECT }}
      chart-registry-repo: ${{ vars.HARBOR_REPO }}
      cosign-public-key: ${{ vars.COSIGN_PUBLIC_KEY }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      test-command: |
        helm template $CHART --values charts/control/values.yaml
    secrets:
      cosign-private-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
      cosign-password: ${{ secrets.COSIGN_PASSWORD }}
      chart-registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}
