name: PR Update

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:

  slack:
    # Open a new PR thread on Slack for this CI run.
    uses: SwanseaUniversityMedical/workflows/.github/workflows/slack-pr-thread.yaml@v2.3.0
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}

  changes:
    # Detect which files have been changed on this PR's full history
    needs: slack
    uses: SwanseaUniversityMedical/workflows/.github/workflows/changes.yaml@v2.3.0
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      github-app-id: ${{ vars.APP_ID }}
      filters: |
        api-container:
          - './.github/workflows/on-pr-update.yaml'
          - 'src/DARE-API/**'
          - 'src/BL/**'
        ui-container:
          - './.github/workflows/on-pr-update.yaml'
          - 'src/DARE-FrontEnd/**'
          - 'src/BL/**'
        tre-api-container:
          - './.github/workflows/on-pr-update.yaml'
          - 'src/TRE-API/**'
          - 'src/BL/**'
        tre-ui-container:
          - './.github/workflows/on-pr-update.yaml'
          - 'src/TRE-UI/**'
          - 'src/BL/**'
        tre-agent-container:
          - './.github/workflows/on-pr-update.yaml'
          - 'src/TREAgent/**'
          - 'src/BL/**'
        chart:
        - './.github/workflows/on-pr-update.yaml'
        - 'charts/**'

    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}

  api-container:
    # Build the api container and push it as :pr-42 and :pr-42-fe45b3h
    needs:
      - slack
      - changes
    if: fromJSON(needs.changes.outputs.changes).api-container == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/on-pr-update-container.yaml@v2.3.0
    with:
      job-name: api-container
      container-registry: ${{ vars.HARBOR_REGISTRY }}
      container-registry-user: ${{ vars.HARBOR_USER }}
      container-registry-project: ${{ vars.HARBOR_PROJECT }}
      container-registry-repo: ${{ vars.HARBOR_REPO }}-main-api
      github-app-id: ${{ vars.APP_ID }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      build-command: |
        docker build -t $IMAGE -f src/DARE-API/Dockerfile src/
      test-command: |
        echo '0'
    secrets:
      container-registry-token: ${{ secrets.HARBOR_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  ui-container:
    # Build the ui container and push it as :pr-42 and :pr-42-fe45b3h
    needs:
      - slack
      - changes
    if: fromJSON(needs.changes.outputs.changes).ui-container == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/on-pr-update-container.yaml@v2.3.0
    with:
      job-name: ui-container
      container-registry: ${{ vars.HARBOR_REGISTRY }}
      container-registry-user: ${{ vars.HARBOR_USER }}
      container-registry-project: ${{ vars.HARBOR_PROJECT }}
      container-registry-repo:  ${{ vars.HARBOR_REPO }}-main-ui
      github-app-id: ${{ vars.APP_ID }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      build-command: |
        docker build -t $IMAGE -f src/DARE-FrontEnd/Dockerfile src/
      test-command: |
        echo '0'
    secrets:
      container-registry-token: ${{ secrets.HARBOR_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  tre-api-container:
    # Build the tre-api container and push it as :pr-42 and :pr-42-fe45b3h
    needs:
      - slack
      - changes
    if: fromJSON(needs.changes.outputs.changes).tre-api-container == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/on-pr-update-container.yaml@v2.3.0
    with:
      job-name: tre-api-container
      container-registry: ${{ vars.HARBOR_REGISTRY }}
      container-registry-user: ${{ vars.HARBOR_USER }}
      container-registry-project: ${{ vars.HARBOR_PROJECT }}
      container-registry-repo: ${{ vars.HARBOR_REPO }}-tre-api
      github-app-id: ${{ vars.APP_ID }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      build-command: |
        docker build -t $IMAGE -f src/TRE-API/Dockerfile src/
      test-command: |
        echo '0'
    secrets:
      container-registry-token: ${{ secrets.HARBOR_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  tre-ui-container:
    # Build the tre-ui container and push it as :pr-42 and :pr-42-fe45b3h
    needs:
      - slack
      - changes
    if: fromJSON(needs.changes.outputs.changes).tre-ui-container == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/on-pr-update-container.yaml@v2.3.0
    with:
      job-name: tre-ui-container
      container-registry: ${{ vars.HARBOR_REGISTRY }}
      container-registry-user: ${{ vars.HARBOR_USER }}
      container-registry-project: ${{ vars.HARBOR_PROJECT }}
      container-registry-repo: ${{ vars.HARBOR_REPO }}-tre-ui
      github-app-id: ${{ vars.APP_ID }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      build-command: |
        docker build -t $IMAGE -f src/TRE-UI/Dockerfile src/
      test-command: |
        echo '0'
    secrets:
      container-registry-token: ${{ secrets.HARBOR_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  tre-agent-container:
    # Build the tre-agent container and push it as :pr-42 and :pr-42-fe45b3h
    needs:
      - slack
      - changes
    if: fromJSON(needs.changes.outputs.changes).tre-agent-container == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/on-pr-update-container.yaml@v2.3.0
    with:
      job-name: tre-agent-container
      container-registry: ${{ vars.HARBOR_REGISTRY }}
      container-registry-user: ${{ vars.HARBOR_USER }}
      container-registry-project: ${{ vars.HARBOR_PROJECT }}
      container-registry-repo: ${{ vars.HARBOR_REPO }}-tre-agent
      github-app-id: ${{ vars.APP_ID }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      build-command: |
        docker build -t $IMAGE -f src/TREAgent/Dockerfile src/
      test-command: |
        echo '0'
    secrets:
      container-registry-token: ${{ secrets.HARBOR_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  chart:
    # Build the chart and push it as :pr-42 and :pr-42-fe45b3h
    needs:
      - slack
      - changes
    if: fromJSON(needs.changes.outputs.changes).chart == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/on-pr-update-chart.yaml@v2.3.0
    with:
      job-name: chart
      chart: charts/**
      chart-registry: ${{ vars.HARBOR_REGISTRY }}
      chart-registry-user: ${{ vars.HARBOR_USER }}
      chart-registry-project: ${{ vars.HARBOR_PROJECT }}
      chart-registry-repo: ${{ vars.HARBOR_REPO }}
      github-app-id: ${{ vars.APP_ID }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      test-command: |
        helm template $CHART --values charts/control/values.yaml
    secrets:
      chart-registry-token: ${{ secrets.HARBOR_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  slack-update:
    # Update the original Slack message with the final workflow status
    # WARNING! ALL UPSTREAM JOBS MUST BE DECLARED HERE TO REPORT FAILURES CORRECTLY!
    needs:
      - slack
      - changes
      - api-container
      - ui-container
      - tre-api-container
      - tre-ui-container
      - tre-agent-container
      - chart
    uses: SwanseaUniversityMedical/workflows/.github/workflows/slack-pr-thread.yaml@v2.3.0
    if: always()
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      status: ${{ contains(join(needs.*.result, ','), 'failure') && ':no_entry:' || ':white_check_mark:' }}
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}